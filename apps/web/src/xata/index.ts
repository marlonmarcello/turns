// Generated by Xata Codegen 0.26.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "client",
    columns: [{ name: "name", type: "string", unique: true }],
    revLinks: [{ column: "client", table: "client_employee" }],
  },
  {
    name: "employee_role",
    columns: [{ name: "name", type: "string", unique: true }],
    revLinks: [{ column: "role", table: "employee" }],
  },
  {
    name: "employee",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "" },
      { name: "role", type: "link", link: { table: "employee_role" } },
      { name: "email", type: "email", unique: true },
    ],
  },
  {
    name: "client_employee",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "" },
      { name: "email", type: "email", unique: true },
      { name: "client", type: "link", link: { table: "client" } },
    ],
  },
  {
    name: "project_type",
    columns: [{ name: "name", type: "string", unique: true }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Client = InferredTypes["client"];
export type ClientRecord = Client & XataRecord;

export type EmployeeRole = InferredTypes["employee_role"];
export type EmployeeRoleRecord = EmployeeRole & XataRecord;

export type Employee = InferredTypes["employee"];
export type EmployeeRecord = Employee & XataRecord;

export type ClientEmployee = InferredTypes["client_employee"];
export type ClientEmployeeRecord = ClientEmployee & XataRecord;

export type ProjectType = InferredTypes["project_type"];
export type ProjectTypeRecord = ProjectType & XataRecord;

export type DatabaseSchema = {
  client: ClientRecord;
  employee_role: EmployeeRoleRecord;
  employee: EmployeeRecord;
  client_employee: ClientEmployeeRecord;
  project_type: ProjectTypeRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Marlon-Ugocioni-Marcello-s-workspace-v76dd2.us-west-2.xata.sh/db/turns-test",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
